{
  "hints": {
    "keccak256Verify(byte[32],byte[32],byte[32][])bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjkyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGtlY2NhazI1NlZlcmlmeShieXRlWzMyXSxieXRlWzMyXSxieXRlWzMyXVtdKWJvb2wKKmFiaV9yb3V0ZV9rZWNjYWsyNTZWZXJpZnk6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIHByb29mOiBieXRlWzMyXVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglleHRyYWN0IDIgMAoKCS8vIGhhc2hlZExlYWY6IGJ5dGVbMzJdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDEgKGhhc2hlZExlYWYpIGZvciBrZWNjYWsyNTZWZXJpZnkgbXVzdCBiZSBhIGJ5dGVbMzJdCglhc3NlcnQKCgkvLyByb290OiBieXRlWzMyXQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAyIChyb290KSBmb3Iga2VjY2FrMjU2VmVyaWZ5IG11c3QgYmUgYSBieXRlWzMyXQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBrZWNjYWsyNTZWZXJpZnkoYnl0ZVszMl0sYnl0ZVszMl0sYnl0ZVszMl1bXSlib29sCgljYWxsc3ViIGtlY2NhazI1NlZlcmlmeQoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBrZWNjYWsyNTZWZXJpZnkocm9vdDogYnl0ZXMzMiwgaGFzaGVkTGVhZjogYnl0ZXMzMiwgcHJvb2Y6IGJ5dGVzMzJbXSk6IGJvb2xlYW4KLy8KLy8gUHJvdmUgdGhhdCBhIGxlYWYgaXMgaW4gYSBtZXJrbGUgdHJlZSBieSB2ZXJpZnlpbmcgdGhlIHBhdGggdG8gdGhlIHJvb3QKLy8KLy8gQHBhcmFtIHJvb3QgVGhlIG1lcmtsZSByb290Ci8vIEBwYXJhbSBoYXNoZWRMZWFmIFRoZSBoYXNoZWQgbGVhZiB0byB2ZXJpZnkKLy8gQHBhcmFtIHByb29mIFRoZSBtZXJrbGUgcHJvb2YKLy8KLy8gQHJldHVybnMgVHJ1ZSBpZiB0aGUgcHJvb2YgaXMgdmFsaWQsIGZhbHNlIG90aGVyd2lzZQprZWNjYWsyNTZWZXJpZnk6Cglwcm90byAzIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoKCS8vIHRlc3QvY29udHJhY3RzL3NvcnRlZF9zdGFuZGFyZF92ZXJpZmllci5hbGdvLnRzOjE2CgkvLyBmb3IgKGxldCBpID0gMDsgaSA8IHByb29mLmxlbmd0aDsgaSArPSAxKQoJaW50IDAKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCipmb3JfMDoKCS8vIHRlc3QvY29udHJhY3RzL3NvcnRlZF9zdGFuZGFyZF92ZXJpZmllci5hbGdvLnRzOjE2CgkvLyBpIDwgcHJvb2YubGVuZ3RoCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWZyYW1lX2RpZyAtMyAvLyBwcm9vZjogYnl0ZXMzMltdCglsZW4KCWludCAzMgoJLwoJPAoJYnogKmZvcl8wX2VuZAoKCS8vICppZjBfY29uZGl0aW9uCgkvLyB0ZXN0L2NvbnRyYWN0cy9zb3J0ZWRfc3RhbmRhcmRfdmVyaWZpZXIuYWxnby50czoxOAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAxNDUKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludCAxNDUKCTwKCWJ6ICppZjBfZW5kCgoJLy8gKmlmMF9jb25zZXF1ZW50CgkvLyB0ZXN0L2NvbnRyYWN0cy9zb3J0ZWRfc3RhbmRhcmRfdmVyaWZpZXIuYWxnby50czoxOQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50IGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludCAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZSBiNjQgQ29FQiAvLyAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnQgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMF9lbmQ6CgkvLyAqaWYxX2NvbmRpdGlvbgoJLy8gdGVzdC9jb250cmFjdHMvc29ydGVkX3N0YW5kYXJkX3ZlcmlmaWVyLmFsZ28udHM6MjIKCS8vIGJ0b2JpZ2ludChwcm9vZltpXSkgPiBidG9iaWdpbnQoaGFzaCkKCWZyYW1lX2RpZyAtMyAvLyBwcm9vZjogYnl0ZXMzMltdCglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDAgLy8gaW5pdGlhbCBvZmZzZXQKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50IDMyCgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCSsKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCXN3YXAKCWludCAzMgoJZXh0cmFjdDMKCWZyYW1lX2RpZyAtMiAvLyBoYXNoZWRMZWFmOiBieXRlczMyCgliPgoJYnogKmlmMV9lbHNlCgoJLy8gKmlmMV9jb25zZXF1ZW50CgkvLyB0ZXN0L2NvbnRyYWN0cy9zb3J0ZWRfc3RhbmRhcmRfdmVyaWZpZXIuYWxnby50czoyMwoJLy8gaGFzaCA9IGtlY2NhazI1NihoYXNoICsgcHJvb2ZbaV0pCglmcmFtZV9kaWcgLTIgLy8gaGFzaGVkTGVhZjogYnl0ZXMzMgoJZnJhbWVfZGlnIC0zIC8vIHByb29mOiBieXRlczMyW10KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMCAvLyBpbml0aWFsIG9mZnNldAoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnQgMzIKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJKwoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJc3dhcAoJaW50IDMyCglleHRyYWN0MwoJY29uY2F0CglrZWNjYWsyNTYKCWZyYW1lX2J1cnkgLTIgLy8gaGFzaDogYnl0ZXMzMgoJYiAqaWYxX2VuZAoKKmlmMV9lbHNlOgoJLy8gdGVzdC9jb250cmFjdHMvc29ydGVkX3N0YW5kYXJkX3ZlcmlmaWVyLmFsZ28udHM6MjUKCS8vIGhhc2ggPSBrZWNjYWsyNTYocHJvb2ZbaV0gKyBoYXNoKQoJZnJhbWVfZGlnIC0zIC8vIHByb29mOiBieXRlczMyW10KCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5CglpbnQgMCAvLyBpbml0aWFsIG9mZnNldAoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnQgMzIKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJKwoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJc3dhcAoJaW50IDMyCglleHRyYWN0MwoJZnJhbWVfZGlnIC0yIC8vIGhhc2hlZExlYWY6IGJ5dGVzMzIKCWNvbmNhdAoJa2VjY2FrMjU2CglmcmFtZV9idXJ5IC0yIC8vIGhhc2g6IGJ5dGVzMzIKCippZjFfZW5kOgoKKmZvcl8wX2NvbnRpbnVlOgoJLy8gdGVzdC9jb250cmFjdHMvc29ydGVkX3N0YW5kYXJkX3ZlcmlmaWVyLmFsZ28udHM6MTYKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnQgMQoJKwoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzAKCipmb3JfMF9lbmQ6CgkvLyB0ZXN0L2NvbnRyYWN0cy9zb3J0ZWRfc3RhbmRhcmRfdmVyaWZpZXIuYWxnby50czoyOQoJLy8gcmV0dXJuIGhhc2ggPT09IHJvb3Q7CglmcmFtZV9kaWcgLTIgLy8gaGFzaGVkTGVhZjogYnl0ZXMzMgoJZnJhbWVfZGlnIC0xIC8vIHJvb3Q6IGJ5dGVzMzIKCT09CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnQgMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CgltZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJbWV0aG9kICJrZWNjYWsyNTZWZXJpZnkoYnl0ZVszMl0sYnl0ZVszMl0sYnl0ZVszMl1bXSlib29sIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9rZWNjYWsyNTZWZXJpZnkKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "SortedStandardVerifier",
    "desc": "",
    "methods": [
      {
        "name": "keccak256Verify",
        "desc": "Prove that a leaf is in a merkle tree by verifying the path to the root",
        "args": [
          {
            "name": "root",
            "type": "byte[32]",
            "desc": "The merkle root"
          },
          {
            "name": "hashedLeaf",
            "type": "byte[32]",
            "desc": "The hashed leaf to verify"
          },
          {
            "name": "proof",
            "type": "byte[32][]",
            "desc": "The merkle proof"
          }
        ],
        "returns": {
          "type": "bool",
          "desc": "True if the proof is valid, false otherwise"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}